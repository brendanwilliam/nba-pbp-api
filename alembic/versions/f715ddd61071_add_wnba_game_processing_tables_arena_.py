"""Add WNBA game processing tables: arena, team, game, person, person_game, team_game, play, boxscore

Revision ID: f715ddd61071
Revises: debd2ca4a93b
Create Date: 2025-08-28 14:38:44.149354

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f715ddd61071'
down_revision: Union[str, None] = 'debd2ca4a93b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('arena',
    sa.Column('arena_id', sa.Integer(), nullable=False),
    sa.Column('arena_city', sa.String(length=100), nullable=True),
    sa.Column('arena_name', sa.String(length=200), nullable=True),
    sa.Column('arena_state', sa.String(length=50), nullable=True),
    sa.Column('arena_country', sa.String(length=50), nullable=True),
    sa.Column('arena_timezone', sa.String(length=50), nullable=True),
    sa.Column('arena_postal_code', sa.String(length=20), nullable=True),
    sa.Column('arena_street_address', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('arena_id')
    )
    op.create_table('person',
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('person_name', sa.String(length=200), nullable=True),
    sa.Column('person_name_i', sa.String(length=50), nullable=True),
    sa.Column('person_name_first', sa.String(length=100), nullable=True),
    sa.Column('person_name_family', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('person_id')
    )
    op.create_table('team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('team_city', sa.String(length=100), nullable=True),
    sa.Column('team_name', sa.String(length=100), nullable=True),
    sa.Column('team_tricode', sa.String(length=10), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('game_code', sa.String(length=50), nullable=True),
    sa.Column('arena_id', sa.Integer(), nullable=True),
    sa.Column('game_et', sa.DateTime(), nullable=True),
    sa.Column('game_sellout', sa.Boolean(), nullable=True),
    sa.Column('home_team_id', sa.Integer(), nullable=True),
    sa.Column('home_team_wins', sa.Integer(), nullable=True),
    sa.Column('home_team_losses', sa.Integer(), nullable=True),
    sa.Column('away_team_id', sa.Integer(), nullable=True),
    sa.Column('away_team_wins', sa.Integer(), nullable=True),
    sa.Column('away_team_losses', sa.Integer(), nullable=True),
    sa.Column('game_duration', sa.String(length=20), nullable=True),
    sa.Column('game_label', sa.String(length=100), nullable=True),
    sa.Column('game_attendance', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['arena_id'], ['arena.arena_id'], ),
    sa.PrimaryKeyConstraint('game_id')
    )
    op.create_table('boxscore',
    sa.Column('boxscore_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('home_away_team', sa.String(length=1), nullable=True),
    sa.Column('box_type', sa.String(length=20), nullable=True),
    sa.Column('min', sa.String(length=10), nullable=True),
    sa.Column('pts', sa.Integer(), nullable=True),
    sa.Column('reb', sa.Integer(), nullable=True),
    sa.Column('ast', sa.Integer(), nullable=True),
    sa.Column('stl', sa.Integer(), nullable=True),
    sa.Column('blk', sa.Integer(), nullable=True),
    sa.Column('pm', sa.Integer(), nullable=True),
    sa.Column('fgm', sa.Integer(), nullable=True),
    sa.Column('fga', sa.Integer(), nullable=True),
    sa.Column('fgp', sa.Float(), nullable=True),
    sa.Column('tpm', sa.Integer(), nullable=True),
    sa.Column('tpa', sa.Integer(), nullable=True),
    sa.Column('tpp', sa.Float(), nullable=True),
    sa.Column('ftm', sa.Integer(), nullable=True),
    sa.Column('fta', sa.Integer(), nullable=True),
    sa.Column('ftp', sa.Float(), nullable=True),
    sa.Column('to', sa.Integer(), nullable=True),
    sa.Column('pf', sa.Integer(), nullable=True),
    sa.Column('orebs', sa.Integer(), nullable=True),
    sa.Column('drebs', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['person.person_id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('boxscore_id')
    )
    op.create_table('person_game',
    sa.Column('person_game_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['person.person_id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('person_game_id')
    )
    op.create_table('play',
    sa.Column('play_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('action_id', sa.Integer(), nullable=True),
    sa.Column('action_type', sa.String(length=50), nullable=True),
    sa.Column('sub_type', sa.String(length=50), nullable=True),
    sa.Column('period', sa.Integer(), nullable=True),
    sa.Column('clock', sa.String(length=20), nullable=True),
    sa.Column('x_legacy', sa.Integer(), nullable=True),
    sa.Column('y_legacy', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('score_away', sa.String(length=10), nullable=True),
    sa.Column('score_home', sa.String(length=10), nullable=True),
    sa.Column('shot_value', sa.Integer(), nullable=True),
    sa.Column('shot_result', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('is_field_goal', sa.Boolean(), nullable=True),
    sa.Column('points_total', sa.Integer(), nullable=True),
    sa.Column('action_number', sa.Integer(), nullable=True),
    sa.Column('shot_distance', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['person.person_id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('play_id')
    )
    op.create_table('team_game',
    sa.Column('team_game_id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('team_game_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('team_game')
    op.drop_table('play')
    op.drop_table('person_game')
    op.drop_table('boxscore')
    op.drop_table('game')
    op.drop_table('team')
    op.drop_table('person')
    op.drop_table('arena')
    # ### end Alembic commands ###
