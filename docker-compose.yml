# NBA Play-by-Play - Development Environment
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: nba_postgres
    environment:
      POSTGRES_DB: nba_pbp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d nba_pbp"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: nba_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  # NBA API Server
  api:
    build: 
      context: .
      dockerfile: Dockerfile.api
    container_name: nba_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/nba_pbp
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      # Hot reload in development
      - ./src:/app/src
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NBA MCP Server
  mcp:
    build: 
      context: .
      dockerfile: Dockerfile.mcp
    container_name: nba_mcp
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/nba_pbp
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_SERVER_PORT=3000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Hot reload in development
      - ./src:/app/src
    restart: unless-stopped

  # Nginx reverse proxy (optional for development)
  nginx:
    image: nginx:alpine
    container_name: nba_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - mcp
    restart: unless-stopped
    profiles:
      - with-nginx

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: nba_network